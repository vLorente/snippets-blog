---
import { UNCATEGORIZED } from "@constants/constants"
import { getSortedPosts } from "@utils/content-utils"
import { getPostText } from "@utils/site-text-utils"
import { getPostUrlBySlug } from "@utils/url-utils"
import type { CollectionEntry } from "astro:content"

interface Props {
	tags?: string[]
	categories?: string[]
}
const { tags, categories } = Astro.props

let posts = await getSortedPosts()

if (Array.isArray(tags) && tags.length > 0) {
	posts = posts.filter(
		(post) =>
			Array.isArray(post.data.tags) &&
			post.data.tags.some((tag: string) => tags.includes(tag))
	)
}

if (Array.isArray(categories) && categories.length > 0) {
	posts = posts.filter(
		(post) =>
			(post.data.category && categories.includes(post.data.category)) ||
			(!post.data.category && categories.includes(UNCATEGORIZED))
	)
}

interface GroupedPost {
	year: string
	posts: CollectionEntry<"posts">[]
}

const groups = (function (): GroupedPost[] {
	const groupedPosts: { [year: string]: CollectionEntry<"posts">[] } =
		posts.reduce(
			(
				grouped: { [year: string]: CollectionEntry<"posts">[] },
				post: CollectionEntry<"posts">
			) => {
				const year = post.data.published.getFullYear().toString()
				if (!grouped[year]) {
					grouped[year] = []
				}
				grouped[year].push(post)
				return grouped
			},
			{}
		)

	// convertir objeto en array
	const groupedPostsArray: GroupedPost[] = Object.keys(groupedPosts).map(
		(key) => ({
			year: key,
			posts: groupedPosts[key],
		})
	)

	// ordenar años primero los más recientes
	groupedPostsArray.sort(
		(a: GroupedPost, b: GroupedPost) => parseInt(b.year) - parseInt(a.year)
	)
	return groupedPostsArray
})()

function formatDate(date: Date) {
	const month = (date.getMonth() + 1).toString().padStart(2, "0")
	const day = date.getDate().toString().padStart(2, "0")
	return `${month}-${day}`
}

function formatTag(tag: string[]) {
	return tag.map((t) => `#${t}`).join(" ")
}
---

<div class="card-base px-8 py-6">
	{
		groups.map((group) => (
			<div>
				<div class="flex h-[3.75rem] w-full flex-row items-center">
					<div class="w-[15%] text-right text-2xl font-bold transition md:w-[10%]">
						{group.year}
					</div>
					<div class="w-[15%] md:w-[10%]">
						<div class="outline-3 z-50 mx-auto h-3 w-3 rounded-full bg-none outline -outline-offset-[2px] outline-primary" />
					</div>
					<div class="w-[70%] text-left transition md:w-[80%]">
						{group.posts.length} {getPostText(group.posts.length)}
					</div>
				</div>
				{group.posts.map((post: any) => (
					<a
						href={getPostUrlBySlug(post.slug)}
						aria-label={post.data.title}
						class="group btn-ghost block h-10 w-full rounded-lg hover:bg-black/10"
					>
						<div class="flex h-full flex-row items-center justify-start">
							<div class="w-[15%] text-right text-sm text-neutral-600 transition dark:text-neutral-400 md:w-[10%]">
								{formatDate(post.data.published)}
							</div>

							<div class="dash-line relative flex h-full w-[15%] items-center md:w-[10%]">
								<div
									class="z-50 mx-auto h-1 w-1 rounded bg-secondary
															outline outline-4 outline-secondary
															transition-all group-hover:h-5 group-hover:bg-secondary
															group-hover:outline-secondary
															group-active:outline-secondary
															md:outline-2
															"
								/>
							</div>
							<div
								class=" w-[70%] overflow-hidden overflow-ellipsis whitespace-nowrap
															pr-8 text-left font-bold
															transition-all group-hover:translate-x-1 group-hover:text-primary md:w-[65%] md:max-w-[65%]"
							>
								{post.data.title}
							</div>
							<div
								class="hidden overflow-hidden overflow-ellipsis whitespace-nowrap text-left
													text-xs text-neutral-600
													transition dark:text-neutral-400 md:block md:w-[15%]"
							>
								{formatTag(post.data.tags)}
							</div>
						</div>
					</a>
				))}
			</div>
		))
	}
</div>

<style>
	@tailwind components;
	@tailwind utilities;

	@layer components {
		.dash-line {
		}
		.dash-line::before {
			content: "";
			@apply pointer-events-none absolute -top-1/2 left-[calc(50%_-_1px)] h-full w-[10%]
					border-l-[2px] border-dashed border-primary transition;
		}
	}
</style>
